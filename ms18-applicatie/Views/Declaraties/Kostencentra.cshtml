<h1>@ViewData["Title"]</h1>

<div id="login-user" class="hidden">
    <p id="login-info">Hallo <span rel="name"></span>!</p>    

    <p>Declaraties vallen altijd onder een bepaald “kostencentrum”.</p>

    <div id="cost-centres" class="hidden">
        <p><i>Dit zijn de kostencentra waar een declaratie onder kan vallen:</i></p>

        <table class="data-table">
            <tr>
                <th>Kostencentrum</th>
                <th></th>
            </tr>
            <tr id="cost-centres-empty">
                <td colspan="999">Er zijn geen konstencentra</td>
            </tr>    
            <tr id="cost-centres-row" class="hidden">
                <td>
                    <span rel="name" class="cost-centre-name"></span>
                    <input rel="name:value,id:data-id" class="cost-centre-input hidden">
                </td>
                <td class="user-actions">
                    <a rel="id:data-id" href="#" class="edit-link">Aanpassen</a>
                    <a rel="id:data-id" href="#" class="save-link hidden">Opslaan</a>
                    <a rel="id:data-id" href="#" class="delete-link">Verwijderen</a>
                </td>
            </tr>
        </table>

        <p><button type="button" class="btn btn-primary" id="cost-centres-add">Kostencentrum toevoegen</button></p>

        <p><a href="/Declaraties">Terug naar Declaraties</a></p>
    </div>
</div>

@section scripts {
<script>
    getUserSession().then(member => {
        // User session loaded
     
        const userId = member.id;
        showElement(document.querySelector('#login-user'));
        showOutput(member, document.querySelector('#login-info'));

        apiGet('CostCentre').then(costCentres => {
            // Cost centre data loaded

            const noCostCentres = (!costCentres || !costCentres.length);
            const costCentreTable = document.querySelector('#cost-centres .data-table');
            if (noCostCentres) {
                showElement(document.querySelector('#cost-centres-empty'));
            } else {
                hideElement(document.querySelector('#cost-centres-empty'));
            }
            for (id in costCentres) {
                const costCentreRow = document.querySelector('#cost-centres-row').cloneNode(true);
                costCentreRow.id = 'cost-centre-' + costCentres[id].id;
                showElement(costCentreRow);
                showOutput(costCentres[id], costCentreRow);
                costCentreTable.appendChild(costCentreRow);
            }
            showElement(document.querySelector('#cost-centres'));

            costCentreTable.querySelectorAll('.cost-centre-input').forEach(costCentreInput => costCentreInput.addEventListener('keyup', event => {
                // Save on enter key

                if (event.which != 13)
                    return

                costCentreTable.querySelector('.save-link[data-id="' + costCentreInput.dataset.id + '"]').dispatchEvent(new Event('click'));
            }));
            
            costCentreTable.querySelectorAll('.edit-link').forEach(editLink => editLink.addEventListener('click', event => {
                // Click Edit link
                
                event.preventDefault();

                const editId = editLink.dataset.id;
                const costCentreRow = costCentreTable.querySelector('#cost-centre-' + editId);
                const costCentreInput = costCentreRow.querySelector('.cost-centre-input');

                hideElement(costCentreRow.querySelector('.cost-centre-name'));
                hideElement(costCentreRow.querySelector('.edit-link'));
                
                showElement(costCentreRow.querySelector('.save-link'));
                showElement(costCentreInput);
                costCentreInput.focus();
            }));

            costCentreTable.querySelectorAll('.save-link').forEach(saveLink => saveLink.addEventListener('click', event => {
                // Click Save link
                
                event.preventDefault();

                const editId = saveLink.dataset.id;
                const costCentreRow = costCentreTable.querySelector('#cost-centre-' + editId);
                const costCentreInput = costCentreRow.querySelector('.cost-centre-input');
                const newName = costCentreInput.value;

                costCentreInput.disabled = true;
                hideElement(costCentreRow.querySelector('.user-actions'));

                apiPut('CostCentre/' + editId, { id: editId, name: newName }).then(result => {
                    // Saved the updated cost centre: apply it here too

                    if (!result)
                        return;

                    const costCentreName = costCentreRow.querySelector('.cost-centre-name');
                    showOutput({ id: editId, name: newName }, costCentreRow);
                    costCentreInput.disabled = false;

                    showElement(costCentreName);
                    showElement(costCentreRow.querySelector('.edit-link'));
                    showElement(costCentreRow.querySelector('.user-actions'));

                    hideElement(costCentreRow.querySelector('.save-link'));
                    hideElement(costCentreInput);

                    document.querySelectorAll('#user-receipts [data-cost-centre="' + editId + '"]').forEach(label => label.innerText = newName);
                });
            }));
            
            costCentreTable.querySelectorAll('.delete-link').forEach(deleteLink => deleteLink.addEventListener('click', event => {
                // Click Delete link

                event.preventDefault();

                if (!window.confirm('Weet je zeker dat je dit kostencentrum wilt verwijderen?'))
                    return;

                const deleteId = deleteLink.dataset.id;
                const costCentreRow = costCentreTable.querySelector('#cost-centre-' + deleteId);
                hideElement(costCentreRow.querySelector('.user-actions'));

                apiDelete('CostCentre/' + deleteId).then(result => {
                    if (!result)
                        return;

                    window.location = window.location;
                });
            }));

            document.querySelector('#cost-centres-add').addEventListener('click', event => {
                // Add cost centre link

                event.preventDefault();

                const costCentreRow = document.querySelector('#cost-centres-row').cloneNode(true);
                showElement(costCentreRow);
                costCentreTable.appendChild(costCentreRow);

                const costCentreInput = costCentreRow.querySelector('.cost-centre-input');
                const editLink = costCentreRow.querySelector('.edit-link');
                const saveLink = costCentreRow.querySelector('.save-link');
                const deleteLink = costCentreRow.querySelector('.delete-link');

                hideElement(costCentreRow.querySelector('.cost-centre-name'));
                hideElement(costCentreRow.querySelector('.edit-link'));
                
                showElement(saveLink);
                showElement(costCentreInput);
                costCentreInput.focus();

                costCentreInput.addEventListener('keyup', event => {
                    // Save on enter key

                    if (event.which != 13)
                        return

                    saveLink.dispatchEvent(new Event('click'));
                })

                editLink.addEventListener('click', event => {
                    // Click Edit link of newly added cost centre
                    
                    event.preventDefault();

                    hideElement(costCentreRow.querySelector('.cost-centre-name'));
                    hideElement(costCentreRow.querySelector('.edit-link'));
                    
                    showElement(costCentreRow.querySelector('.save-link'));
                    showElement(costCentreInput);
                    costCentreInput.focus();
                });

                saveLink.addEventListener('click', event => {
                    // Click Save link of newly added cost centre
                    
                    event.preventDefault();

                    const editId = saveLink.dataset.id;
                    const newName = costCentreInput.value;

                    costCentreInput.disabled = true;
                    hideElement(costCentreRow.querySelector('.user-actions'));

                    if (!editId) {
                        // This newly added cost centre was never saved before, so create it in the database

                        apiPost('CostCentre/', { name: newName }).then(result => {    
                            // Saved new cost centre

                            if (!result)
                                return;
                            
                            window.location = window.location;
                        });
                        return;
                    }

                    apiPut('CostCentre/' + editId, { name: newName }).then(result => {
                        // Saved the updated cost centre: apply it here too

                        if (!result)
                            return;

                        const costCentreName = costCentreRow.querySelector('.cost-centre-name');
                        costCentreName.innerText = newName;
                        costCentreInput.disabled = false;

                        showElement(costCentreName);
                        showElement(costCentreRow.querySelector('.edit-link'));
                        showElement(costCentreRow.querySelector('.user-actions'));

                        hideElement(costCentreRow.querySelector('.save-link'));
                        hideElement(costCentreInput);

                        document.querySelectorAll('#user-receipts [data-cost-centre="' + editId + '"]').forEach(label => label.innerText = newName);
                    });
                });

                deleteLink.addEventListener('click', event => {
                    // Click Delete link of newly added cost centre
                    
                    event.preventDefault();

                    if (!window.confirm('Weet je zeker dat je deze post wilt verwijderen?'))
                        return;

                    const deleteId = deleteLink.dataset.id;

                    if (!deleteId) {
                        // This newly added cost centre was never saved, just remove it here
                        costCentreRow.remove();
                        if (costCentreTable.querySelectorAll('tr:not(.hidden)').length <= 0)
                            showElement(document.querySelector('#cost-centres-empty'));
                        return;
                    }

                    hideElement(costCentreRow.querySelector('.user-actions'));

                    apiDelete('CostCentre/' + deleteId).then(result => {
                        if (!result)
                            return;

                        // Cost centre deleted in database, clean it up here too
                        costCentreRow.remove();
                        if (costCentreTable.querySelectorAll('tr:not(.hidden)').length <= 0)
                            showElement(document.querySelector('#cost-centres-empty'));
                    });
                });

            });
        });
    });
</script>
}