<h1>Declaratie aanpassen</h1>

<div id="login-user" class="hidden">
    <p>Hallo <span rel="name"></span>!</p>

    <p>Hier kan je je declaratie aanpassen of aanvullen:</p>

    <form method="post" id="receipt-form" class="hidden">
        <table>
            <tr>
                <td>Bedrag: </td>
                <td><input type="number" name="Amount" step="0.01" rel="amount:value"></td>
            </tr>
            <tr>
                <td>Opmerkingen: </td>
                <td><textarea name="Note" rel="note"></textarea></td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Aanpassingen opslaan" class="btn btn-primary"></td>
            </tr>
        </table>
    </form>

    <p><i>Foto's:</i></p>

    <div id="receipt-photos">
        <p id="receipt-photo" class="hidden"><img class="drop-image"></p>
        <p id="receipt-photos-none" class="hidden">Er zijn geen foto's bij deze declaratie</p>
    </div>

    <p><button type="button" class="btn btn-secondary" id="receipt-new-photo">Extra foto toevoegen</button></p>
    <input type="file" accept="image/*" class="hidden" id="receipt-input" multiple>
</div>


@section scripts {
<script>
    apiGet('Session').then(member => {
        // User session loaded
     
        showOutput(member, document.querySelector('#login-user'));

        apiGet('Receipt/' + @ViewData["id"]).then(receipt => {
            // Receipt loaded

            showOutput(receipt, document.querySelector('#receipt-form'));

            apiGet('Receipt/' + @ViewData["id"] + '/ReceiptPhoto').then(result => {
                // Show all receipt photos

                if (typeof result[0] == 'undefined')
                    return;

                const photosDiv = document.querySelector('#receipt-photos');
                for (id in result) {
                    let photo = document.querySelector('#receipt-photo').cloneNode(true);
                    let img = photo.querySelector('img');
                    photo.id = 'receipt-photo-' + id;
                    img.src = result[id].base64Image;
                    showElement(photo);
                    photosDiv.appendChild(photo);
                }
            });
        })
    });

    const receiptForm = document.querySelector('#receipt-form');

    receiptForm.addEventListener('submit', event => {
        // Submit form

        event.preventDefault();
        
        let formData = {
            id: @ViewData["id"],
        };
        receiptForm.querySelectorAll('input[name],textarea[name]').forEach(input => formData[input.name] = input.value);
        hideElement(receiptForm);

        apiPut('Receipt/' + @ViewData["id"], formData).then(result => {
            if (result) // PUT should not return a response body, just a success status
                window.location.href = '/Declaraties'; // Of: /Declaraties/Edit?id=' + result.receipt.id;
        });

    });
</script>
}