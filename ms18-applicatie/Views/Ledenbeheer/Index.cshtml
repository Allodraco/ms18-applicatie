<h1>Ledenbeheer</h1>

<div id="login-user" class="hidden">
    <p id="login-info">Hallo <span rel="name"></span>!</p>    

    <p>Hier kun je de accounts van leden beheren.</p>

    <div id="members" class="hidden">

        <p><a asp-action="Nieuw"><button class="btn btn-primary">Nieuw account aanmaken</button></a></p>

        <p><i>Dit zijn de leden die momenteel in de database staan:</i></p>

        <table class="data-table">
            <tr>
                <th>Naam</th>
                <th>E-mailadres</th>
                <th>Kleur</th>
                <th>Gast?</th>
                <th>Rechten</th>
                <th></th>
            </tr>
            <tr class="result-empty">
                <td colspan="999">Er zijn geen leden</td>
            </tr>    
            <tr class="result-add hidden">
                <td colspan="999"><a href="#" id="members-add">Lid toevoegen</a></td>
            </tr>
            <tr class="result-item" class="hidden">
                <td>
                    <span rel="name" class="member-name"></span>
                    <input rel="name:value" class="member-input hidden">
                </td>
                <td rel="email"></td>
                <td><div rel="color:data-color"></div> <span rel="color"></span></td>
                <td class="is-guest" rel="isGuest:data-guest"></td>
                <td rel="permissions::commaSeparated"></td>
                <td class="user-actions">
                    <a rel="id:href:userUrl">Aanpassen</a>
                    <a href="#" class="delete-link" rel="id:data-id">Verwijderen</a>
                </td>
            </tr>
            <tr class="result-has-more">
                <td colspan="999"><a href="#" class="result-show-more">Toon meer</a></td>
            </tr>
        </table>

        &nbsp;

        <p><a href="/">Terug naar Home</a></p>

    </div>
</div>

@section scripts {
<script>
    requireLogin(member => {
        // User session loaded
     
        const userId = member.id;
        showElement(document.querySelector('#login-user'));
        showOutput(member, document.querySelector('#login-info'));
        const memberTable = document.querySelector('#members');

        apiGetInfinite('User', memberTable, (elements, members) => {
            for (i in members) {

                let element = elements[i];
                element.querySelector('.is-guest').innerText = element.querySelector('.is-guest').dataset.guest && element.querySelector('.is-guest').dataset.guest != 'false' ? "Ja" : "Nee";
            
                element.querySelector('.delete-link')?.addEventListener('click', event => {
                    // Click Delete link

                    event.preventDefault();

                    if (!window.confirm('Weet je zeker dat je dit lid wilt verwijderen?'))
                        return;

                    const deleteId = element.dataset.id;
                    hideElement(element.querySelector('.user-actions'));

                    apiDelete('User/' + deleteId).then(result => {
                        if (!result)
                            return;

                        window.location.href = window.location.href.toString().replace(/#.*$/, '');
                    });
                });
            }
            memberTable.querySelectorAll('[data-color]').forEach(color => {
                color.style.backgroundColor = color.dataset.color;
                color.style.width = '16px';
                color.style.height = '16px';
                color.style.borderRadius = '16px';
                color.style.display = 'inline-block';
            });
        });
    });
</script>
}